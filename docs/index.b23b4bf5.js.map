{"mappings":"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","sources":["src/script.ts"],"sourcesContent":["enum Cell {\n  none = \"none\",\n  prev = \"prev\",\n  next = \"next\",\n}\n\nenum Scale {\n  m = \"m\",\n  w = \"w\",\n  d = \"d\",\n}\n\nconst ScaleCount = {\n  [Scale.m]: 12,\n  [Scale.w]: 52,\n  [Scale.d]: 365, // skip leap years\n};\n\nclass Question {\n  value: Date;\n  message = \"When is your birthday? (Format YYYY-MM-DD)\";\n  birthDayKey = \"app:birthday\";\n\n  validator = (v: any): v is string =>\n    Boolean(v !== null && new Date(v).getFullYear());\n\n  constructor() {\n    this.ask();\n  }\n\n  ask(value: string | null = localStorage.getItem(this.birthDayKey)) {\n    while (!this.validator(value)) {\n      value = prompt(this.message);\n    }\n\n    localStorage.setItem(this.birthDayKey, value);\n    return (this.value = new Date(value));\n  }\n\n  getValue(): Date {\n    return this.value;\n  }\n}\n\nclass Timeline {\n  root: HTMLDivElement;\n  duration: HTMLSpanElement;\n  start: Date;\n  end: Date;\n  scale: Scale = Scale.w;\n  q: Question;\n\n  constructor(root, duration) {\n    this.root = root;\n    this.duration = duration;\n    this.q = new Question();\n    this.start = this.q.getValue();\n    this.end = this.getEndRandomDate();\n\n    this.bindingEvents();\n  }\n\n  data() {\n    const data: Cell[][] = [];\n    const now = new Date();\n    const startYear = this.start.getFullYear();\n    const endYear = this.end.getFullYear();\n    let currYear = startYear;\n\n    while (currYear < endYear) {\n      const currData: Cell[] = [];\n\n      for (let i = 1; i <= ScaleCount[this.scale]; i++) {\n        let currDate: Date;\n\n        switch (this.scale) {\n          case Scale.d:\n            currDate = new Date(currYear, 0, i);\n            break;\n          case Scale.w:\n            currDate = new Date(currYear, 0, 7 * i);\n            break;\n          case Scale.m:\n            currDate = new Date(currYear, i - 1, now.getDate());\n            break;\n          default:\n            throw new Error(`Not implemented scale: ${this.scale}`);\n        }\n\n        if (currDate <= this.start) {\n          currData.push(Cell.none);\n        } else if (currDate < now) {\n          currData.push(Cell.prev);\n        } else {\n          currData.push(Cell.next);\n        }\n      }\n\n      data.push(currData);\n      currYear++;\n    }\n\n    return data;\n  }\n\n  render() {\n    const tag = (t) => (_, content, cls?: string) =>\n      `<${t} ${cls ? `class=\"${cls}\"` : \"\"}>${content}</${t}>`;\n\n    const table = tag(\"table\");\n    const tr = tag(\"tr\");\n    const td = tag(\"td\");\n\n    this.root.innerHTML = table`${this.data()\n      .map(\n        (row) =>\n          tr`${row.map((col) => td`${\"\"}${`${col} ${this.scale}`}`).join(\"\")}`\n      )\n      .join(\"\")}`;\n  }\n\n  update({ start, end, scale }: { start?: Date; end?: Date; scale?: Scale }) {\n    if (start) this.start = start;\n    if (end) this.end = end;\n    if (scale) this.scale = scale;\n\n    this.render();\n  }\n\n  getEndRandomDate(): Date {\n    const durationValue = this.randomDuration();\n\n    this.duration.innerHTML = String(durationValue);\n\n    const startCopy = new Date(this.start);\n\n    return new Date(\n      startCopy.setFullYear(startCopy.getFullYear() + durationValue)\n    );\n  }\n\n  randomDuration() {\n    // 50..90y ~ 70y (Normal distribution is ok)\n    return 50 + Math.floor(40 * Math.random());\n  }\n\n  bindingEvents() {\n    (Object.keys(ScaleCount) as Scale[]).forEach((scale) =>\n      document.getElementById(scale)?.addEventListener(\"click\", () => {\n        this.update({ scale });\n      })\n    );\n\n    document.getElementById(\"birth\")?.addEventListener(\"click\", () => {\n      this.update({ start: this.q.ask(null) });\n    });\n\n    document.getElementById(\"death\")?.addEventListener(\"click\", () => {\n      this.update({ end: this.getEndRandomDate() });\n    });\n  }\n}\n\nnew Timeline(\n  document.getElementById(\"container\"),\n  document.getElementById(\"duration\")\n).render();\n"],"names":["$0f592d681121713f$var$Cell","Cell1","$0f592d681121713f$var$Scale","Scale1","$0f592d681121713f$var$ScaleCount","m","w","d","$0f592d681121713f$var$Question","message","birthDayKey","validator","v","Boolean","Date","getFullYear","constructor","this","ask","value","localStorage","getItem","prompt","setItem","getValue","scale","root","duration","q","start","end","getEndRandomDate","bindingEvents","data","now","startYear","endYear","currYear","currData","i","currDate","getDate","Error","push","none","prev","next","render","tag","t","_","content","cls","table","tr","td","innerHTML","map","row","col","join","update","durationValue","randomDuration","String","startCopy","setFullYear","Math","floor","random","Object","keys","forEach","document","getElementById","addEventListener"],"version":3,"file":"index.b23b4bf5.js.map"}